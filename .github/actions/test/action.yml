name: "Test Actions"
description: "Common steps to test each service"

inputs:
  working_directory:
    description: "the working directory"
    required: true
  artifact_name:
    description: "the artifact folder name"
    required: true
  github_token:
    description: "secrets.GITHUB_TOKEN"
    required: true
  codecov_token:
    description: "secrets.CODECOV_TOKEN"
    required: true

runs:
  using: "composite"

  steps:
    - name: Setup Go
      uses: actions/setup-go@v4
      with:
        go-version-file: "${{ inputs.working_directory }}/go.mod"
        check-latest: true
        cache-dependency-path: |
          ${{ inputs.working_directory }}/go.sum

    - name: Display Go version
      shell: bash
      run: go version

    - name: Install dependencies
      shell: bash
      working-directory: ${{ inputs.working_directory }}
      run: go get .

    - name: Set up gotestfmt
      uses: gotesttools/gotestfmt-action@v2
      with:
        token: ${{ inputs.github_token }} # Optional: pass GITHUB_TOKEN to avoid rate limiting.

    - name: Build ${{ inputs.working_directory }}
      shell: bash
      working-directory: ${{ inputs.working_directory }}
      run: go build -v ./...

    - name: Test ${{ inputs.working_directory }}
      shell: bash
      working-directory: ${{ inputs.working_directory }}
      run: |
        set -euo pipefail
        go test ./... -json -v -race -coverpkg=./... -coverprofile=coverage.out -covermode=atomic 2>&1 | tee /tmp/gotest.log | gotestfmt

    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v3
      env:
        CODECOV_TOKEN: ${{ inputs.codecov_token }}

    # Upload the original go test log as an artifact for later review.
    - name: Upload original test log
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: ${{ inputs.artifact_name }}
        path: /tmp/gotest.log
        if-no-files-found: error
